{"version":3,"sources":["components/Checkbox.js","components/Tile.js","components/Footer.js","components/RegisterForm.js","components/SigninForm.js","components/Button.js","components/Sync.js","components/SheetSidebar.js","App.js","reportWebVitals.js","index.js"],"names":["getdate","check","q","d","JSON","parse","localStorage","getItem","date","GreenCheckbox","withStyles","root","margin","padding","color","green","checked","props","Checkbox","ch","Check","CheckboxLabels","ques","useState","setCheck","useEffect","handleChange","event","target","val","Date","getDate","toString","slice","getMonth","getFullYear","toLocaleTimeString","hour","minute","setItem","stringify","FormGroup","row","FormControlLabel","control","onChange","e","name","label","Tile","currentSheet","Questions","setQuestions","fetch","method","headers","body","then","response","json","catch","err","console","log","map","i","className","rel","href","link","ques_name","topic","_id","status","Footer","RegisterForm","setIsLoggedIn","setRegister","userName","setUserName","password","setPassword","error","setError","onSubmitRegister","a","match","user_name","success","alert","id","htmlFor","value","type","placeholder","onClick","SigninForm","setLoggedInAs","onSubmitSignin","ColorButton","theme","palette","getContrastText","yellow","backgroundColor","Button","useStyles","makeStyles","spacing","ques_id","CustomizedButtons","loggedInAs","classes","process","setProcess","Upload","payLoad","keys","Object","length","push","user_id","Download","flag","clear","variant","Sync","register","isLoggedIn","drawerWidth","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","background","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawer","window","useTheme","React","mobileOpen","setMobileOpen","sheetNames","setSheetNames","setCurrentSheet","names","handleDrawerToggle","Divider","List","text","index","ListItem","button","ListItemText","primary","container","undefined","document","CssBaseline","AppBar","position","Toolbar","style","IconButton","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","App","count","setCount","SheetSidebar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49a43326.chunk.js","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst date=(check)=>{\n    if(check===false)\n    return '';\n    const d=new Date();\n    const temp=('0'+d.getDate().toString()).slice(-2)+\"/\"+('0'+d.getMonth().toString()).slice(-2)+'/'+d.getFullYear().toString().slice(-2)+ ' '+ d.toLocaleTimeString('it-IT', {\n      hour: '2-digit',\n      minute:'2-digit'\n    });\n    return temp;\n}\n\n\n\nconst getdate=(check,q)=>{\n  if(check===false)\n  return '';\n  const d=JSON.parse(localStorage.getItem(q))\n  if(d)\n  return d.date;\n  else \n  return '';\n}\n\nconst GreenCheckbox = withStyles({\n  root: {\n    margin:0,  \n    padding:0,\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst getItem=(q)=>{\n      var ch=JSON.parse(localStorage.getItem(q));\n      if(ch)\n      {\n        return ch.Check;\n      }\n      \n      else \n      return false;\n}\n\n\nexport default function CheckboxLabels({checked,ques}) {\n  const [Check, setCheck] = useState(getItem(ques));\n  // console.log(\"checked===\",checked);\n  // console.log(\"check=\",Check); \n  // console.log(\"local storage value\",getItem(ques));\n\n      useEffect(()=>{\n       setCheck(getItem(ques));\n        \n       },[checked,ques]);\n\n    \n\n\n\n  \n\n\n\n\n\n\n  const handleChange = (event,ques) => {\n    // console.log(\"ques name ==== \",ques);\n    // console.log(\"checked status\",event.target.checked);\n    setCheck(event.target.checked);\n    var ch=event.target.checked;\n    var da=date(ch);\n    var val={\n      Check:ch,\n      date:da,\n    }\n    localStorage.setItem(ques,JSON.stringify(val));\n  };\n  \n  \n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<GreenCheckbox checked={Check} onChange={(e)=>handleChange(e,ques)} name=\"checkedG\" />}\n        label={getdate(Check,ques)}\n      />\n      \n        \n    </FormGroup>\n  );\n}\n","import '../css/Tile.css'\nimport React, { useEffect, useState } from 'react';\nimport Checkbox from './Checkbox'\n\n\n\n   \n\nfunction Tile({currentSheet}) {\n    const [Questions, setQuestions] = useState([]);\n    \n    useEffect(()=>{\n        fetch('https://harshit-resource.herokuapp.com/Questions',{\n    \t\tmethod:'post',\n    \t\theaders:{'Content-Type':'application/json'},\n    \t\tbody:JSON.stringify({\n    \t\tcurrentSheet,\n    \t\t})\n    \t}).then(response=>response.json())\n    \t.then(ques=>{\n    \t\tsetQuestions(ques);\n            // console.log(\"ques=======\",ques);\n    \t})\n        .catch((err)=>console.log(err)); \n    },[currentSheet]);\n    \n    // console.log(\"Ques is\",Questions); \n    // console.log(\"current sheet is\",currentSheet);    \n  return (\n    <div >\n    \n\n            {\n                Questions.map((ques,i)=>{\n                        return(\n                            <div key={i} className=\"Tile\">\n                                <div className=\"ques_name\" > <a rel=\"noopener noreferrer\" target='_blank' href={ques.link}>{ques.ques_name}</a> </div>\n                                <div className=\"tag\"  > {ques.topic} </div> \n                                <Checkbox  ques={ques._id} checked={ques.status}/>\n                            </div>  \n                        )}\n                        )\n\t\t\t    }\n    </div>\n  );\n}\n\nexport default Tile;\n","import LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n     \n      Made with &#128147; By Harshit \n      <p>Connect with me <a href=\"https://www.linkedin.com/in/harshit-srivastava-5099b3190/\"> {<LinkedInIcon />}</a> </p>\n      <p>&#169; Harshit-2300 IIIT Jabalpur</p>\n      <p>More amazing features are on the way stay tuned for updates . . . .</p>\n      \n      \n    </div>\n  );\n}\n\nexport default Footer;","import React,{useState} from 'react';\nimport '../css/Form.css'\nimport 'tachyons';\n\n\n\n// Function to check letters and numbers\nfunction alphanumeric(inputtxt)\n{\n    var letterNumber = /^[0-9a-zA-Z\\-'_]+$/;\n    if((inputtxt.match(letterNumber))) \n    {\n    return true;\n    }\n    else\n    { \n    return false; \n    }\n}\n\n\n\n\n    function RegisterForm({setIsLoggedIn,setRegister})\n    {\n\n    const [userName,setUserName]=useState(\"\");\n    const [password,setPassword]=useState(\"\");\n    const [error,setError]=useState(\"\");\n    \n   \n\n    const onSubmitRegister= async (e)=> {\n            \n            \n        if(!alphanumeric(userName))\n        {\n        setUserName(\"\");\n        setError(\"User Name not allowed\");\n        }\n        else\n        {\n            const flag=await fetch('https://harshit-resource.herokuapp.com/signUp',{\n                method:'post',\n                headers:{'Content-Type':'application/json'},\n                body:JSON.stringify({\n                user_name:userName,\n                password:password,\n                })\n            }).then(response=>response.json())\n            .then(success=>{\n                return success;\n            })\n            .catch((err)=>{\n                console.log(err);\n                return false;        \n            }); \n            \n            // console.log(\"flag=\",flag);\n\n            if(flag)\n            {\n            alert(\"Successfully registered\")    \n            setUserName(\"\");\n            setPassword(\"\");\n            setRegister(\"signIn\");\n            }\n            else\n            {\n                alert(\"User already exists\");\n            }\n            setError(\"\");\n        }\n    \n    }\n\n    // console.log(\"user name=\",userName);\n    // console.log(\"password=\",password);\n\n        return (\n                <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l shadow-5 mw6 center\">\n\n                    <main className=\"pa4 black-80\">\n                            <div className=\"measure\">\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                                    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\n                                    <div className=\"mt3\">\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"user_name\">User Name</label>\n                                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                            onChange={(e)=>{setUserName(e.target.value)}}\n                                            type=\"name\"\n                                            name=\"user_name\"\n                                            id=\"user_name\"\n                                            placeholder={error}\n                                            value={userName} />\n                                    </div>\n\n                                    <div className=\"mv3\">\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                        onChange={(e)=>{setPassword(e.target.value)}}\n                                            type=\"password\"\n                                            name=\"password\"\n                                            value={password}\n                                            id=\"password\" />\n                                    </div>\n\n                            </fieldset>\n\n                            <div className=\"\">\n                                    <input\n                                   onClick={(e)=>{onSubmitRegister(e)}}\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                        type=\"submit\"\n                                        value=\"Register\" />\n                            </div>\n\n                            <div className=\"lh-copy mt3\">\n                                    <p \n                                    onClick={()=> setRegister('signIn')}\n                                    className=\"f6 link dim black db pointer\">Sign In</p>\n                                    \n                            </div>\n                            </div>\n                    </main>\n                </article> \t\t\t\t\t\n                );\n    }\n// }\n\n\nexport default RegisterForm;","import React,{useState} from 'react';\nimport '../css/Form.css'\nimport 'tachyons';\n   \n\n\n// Function to check letters and numbers\nfunction alphanumeric(inputtxt)\n{\n    var letterNumber = /^[0-9a-zA-Z\\-'_]+$/;\n    if((inputtxt.match(letterNumber))) \n    {\n    return true;\n    }\n    else\n    { \n    return false; \n    }\n}\n\n    function SigninForm({setIsLoggedIn,setRegister,setLoggedInAs})\n    {\n            \n        const [userName,setUserName]=useState(\"\");\n        const [password,setPassword]=useState(\"\");\n        const [error,setError]=useState(\"\");\n\n        const onSubmitSignin= async (e)=> {\n            \n            \n            if(!alphanumeric(userName))\n            {\n            setUserName(\"\");\n            setError(\"User Name not allowed\");\n            }\n            else\n            {\n                const flag=await fetch('https://harshit-resource.herokuapp.com/login',{\n                method:'post',\n                headers:{'Content-Type':'application/json'},\n                body:JSON.stringify({\n                user_name:userName,\n                password:password,\n                })\n                })\n                .then(response=>response.json())\n                .then(success=>{\n                    return success;\n                })\n                .catch((err)=>{\n                    console.log(err);\n                    return false;        \n                }); \n                \n                // console.log(\"flag=\",flag);\n\n                if(flag)\n                {\n                setLoggedInAs(userName);    \n                setUserName(\"\");\n                \n                setIsLoggedIn(true);\n                }\n                else\n                {\n                    alert(\"Incorrect User Name or Password \");\n                }\n                setError(\"\");\n                \n            }\n        \n        \n        }\n\n        // console.log(\"user name=\",userName);\n        // console.log(\"password=\",password);\n\n            return (\n                    <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l shadow-5 mw6 center\">\n\n                        <main className=\"pa4 black-80\">\n                                <div className=\"measure\">\n                                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                                        \n                                        <div className=\"mt3\">\n                                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"user_name\">User Name</label>\n                                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                                onChange={(e)=>setUserName(e.target.value)}\n                                                type=\"name\"\n                                                name=\"user_name\"\n                                                id=\"user_name\"\n                                                value={userName}\n                                                placeholder={error}\n                                    \n                                                />\n                                        </div>\n\n                                        <div className=\"mv3\">\n                                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                            //  onChange={this.onPasswordChange}\n                                                onChange={(e)=>setPassword(e.target.value)}\n                                                value={password}\n                                                type=\"password\"\n                                                name=\"password\"\n                                                id=\"password\" />\n                                        </div>\n\n                                </fieldset>\n\n                                <div className=\"\">\n                                        <input\n                                        onClick={(e)=>{onSubmitSignin(e)}}\n                                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                            type=\"submit\"\n                                            value=\"Sign in\" />\n                                </div>\n\n                                <div className=\"lh-copy mt3\">\n                                        <p \n                                        onClick={()=> setRegister(\"Register\")}\n                                        className=\"f6 link dim black db pointer\">Register</p>\n                                        \n                                </div>\n                                </div>\n                        </main>\n                    </article> \t\t\t\t\t\n                    );\n        }\n// }\n\n\nexport default SigninForm;","\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownladIcon from '@material-ui/icons/CloudDownload'\nimport React ,{useState} from 'react';\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {  yellow } from '@material-ui/core/colors';\n\n\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(yellow[500]),\n    backgroundColor: yellow[200],\n    '&:hover': {\n      backgroundColor: yellow[700],\n    },\n  },\n}))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\n// const theme = createTheme({\n//   palette: {\n//     primary: green,\n//   },\n// });\n\nconst getItem=(q)=>{\n    var ch=JSON.parse(localStorage.getItem(q));\n    if(ch)\n    {\n      const body={\n          ques_id:q,\n          Check:ch.Check,\n          date:ch.date,\n      }\n      return body;\n    }\n    \n}\n\nexport default function CustomizedButtons({loggedInAs}) {\n  const classes = useStyles();\n  const [process,setProcess]=useState(\"\");\n\n\n   \n  const Upload=async ()=>{\n    var payLoad=[];\n      var keys = Object.keys(localStorage);\n       var i = keys.length;\n    setProcess(\"Uploading ... \");\n    while ( i-- ) {\n        if(keys[i]===\"Testing\")\n        continue;\n        payLoad.push( getItem(keys[i]));\n    }\n    // console.log(payLoad);\n    // use flag for check\n     await fetch('https://harshit-resource.herokuapp.com/upload',{\n                method:'post',\n                headers:{'Content-Type':'application/json'},\n                body:JSON.stringify({\n                user_id:loggedInAs,\n                payLoad,\n                })\n                })\n                .then(response=>response.json())\n                .then(success=>{\n                    setProcess(\"Uploaded\");\n                    return success;\n                })\n                .catch((err)=>{\n                    console.log(err);\n                    setProcess(\"failed\");\n                    return false;        \n                }); \n                \n                // console.log(\"flag=\",flag);\n    }\n\n    const Download=async ()=>{\n          \n          setProcess(\"Downloading ... \");\n          const flag=await fetch('https://harshit-resource.herokuapp.com/download',{\n          method:'post',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify({\n          user_id:loggedInAs,\n          })\n          })\n          .then(response=>response.json())\n          .then(success=>{\n              return success;\n          })\n          .catch((err)=>{\n              console.log(err);\n              return [];        \n          }); \n          \n          // console.log(\"flag=\",flag);\n          localStorage.clear();\n          for(var i=0;i<flag.length;i++)\n          {\n            var val={\n              Check:flag[i].Check,\n              date:flag[i].date,\n            }\n            localStorage.setItem(flag[i].ques_id,JSON.stringify(val));\n          }\n          setProcess(\"Downloaded you can see the changes\");\n\n      }\n\n  return (\n    <div>\n      <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin} onClick={(e)=>Download(e)} >\n        Download &emsp; <CloudDownladIcon />\n      </ColorButton>\n      <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin} onClick={(e)=>Upload(e)} >\n        Upload &emsp; <CloudUploadIcon />\n      </ColorButton>\n      <br />\n      <p>{process}</p>   \n    </div>\n  );\n}\n","import React,{useState} from 'react'; \nimport RegisterForm from \"./RegisterForm\";\nimport SigninForm from \"./SigninForm\";\nimport Button from \"./Button\"\nimport '../css/Sync.css'\n\nfunction Sync() {\n    \n  const [register,setRegister]=useState(\"signIn\"); \n  const [isLoggedIn,setIsLoggedIn]=useState(false);\n  const [loggedInAs,setLoggedInAs]=useState(\"\");\n  // console.log(\"is logged in =\",isLoggedIn);\n  // console.log(\"is logged in as \",loggedInAs);\n  if(isLoggedIn)\n  return (\n    <div className=\"Sync\">\n       <center><Button loggedInAs={loggedInAs} /></center> \n    </div>\n  );\n  else \n  {\n      if(register===\"signIn\")\n      return (\n          <SigninForm setRegister={setRegister} setIsLoggedIn={setIsLoggedIn} setLoggedInAs={setLoggedInAs} />\n      );\n      else\n      return (\n          <RegisterForm setRegister={setRegister} setIsLoggedIn={setIsLoggedIn} />\n      )\n  }\n}\n\nexport default Sync;\n","import React,{useState,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Tile from './Tile'\nimport Footer from './Footer'\nimport Sync from './Sync';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \n      \n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      background:'#E4C802',\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n      \n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    \n    \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    \n  },\n}));\n\n\n\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n   // <================= FETCHING THE SIDEBAR DATAA HERE =================================================>   \n   // <================== CUSTOM STATES DEFINED ===================================================> \n   \n   const [sheetNames,setSheetNames]=useState([\"Loading Please wait ...\"]);\n   const [currentSheet,setCurrentSheet]=useState('Select a sheet to practise');\n\n   // <================== CUSTOM STATES DEFINED ===================================================> \n   \n\t \n   useEffect(()=>{\n     fetch('https://harshit-resource.herokuapp.com/sheetNames').then(response=>response.json())\n   .then(names=>{\n     setSheetNames(names);\n        //  console.log(\"sheetNames=======\",names);\n   })\n     .catch((err)=>console.log(err)); \n },[]);\n    \n  // <================= FETCHING THE SIDEBAR DATAA HERE =================================================>  \n\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      \n      <List>\n        {[\"About\",\"Sync\"].map((text, index) => (\n          <ListItem button key={text} onClick={()=>{ setCurrentSheet(text) }} >\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      {  \n      /*\n      <===================================================================>\n      can add more tabs below  down here\n      <======================================================>\n      */}\n      <List>\n        {sheetNames.map((text, index) => (\n          <ListItem button key={text.name} onClick={()=>{ setCurrentSheet(text.name) }}>\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n            <ListItemText primary={text.name} />\n          </ListItem>\n        ))}\n      </List>\n      \n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n  \n   \n  \n  // const da=localStorage.getItem(\"Testing\");\n  // console.log(da);\n   \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar style={{background:'#E4C802',}}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n            \n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {currentSheet}\n            \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            style={{background:'#E4C802',}}\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            \n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n  {/*<==================== components of tiles that is content of each sheet ==================================== */}\n        {currentSheet===\"About\" ? \n        <div><p>While practising data structures and algorithms many students are confused about which questions to practise and from which platform, this consumes a lot of time in exploring different platforms. Personally I faced this problem a lot, therefore I made this website to make our coding journey easier.</p>\n        <p>This is one stop destination for all the handpicked problems from various sheets available on internet, with time more questions and Sheets will be added to this. </p>\n        <p>At present basic functionality such as checking the done questions is provided where you can check a question and the question will be marked checked with the current timestamp. Note:unmarking will clear your previous timeStamp.</p>\n        <p>I have added my sheet which includes my favorite questions. If you want to contribute to the resource by adding questions,more sheets or want to suggest some features feel free to mail me at <a href=\"mailto:srivastavaharshitprep@gmail.com\" >srivastavaharshitprep@gmail.com</a>. </p>\n        <p>A special thanks to all the content creators who are helping students by providing amazing content.</p>\n        <Footer />\n         </div>\n         :(currentSheet === \"Sync\" ? <Sync />\n          \n         : <Tile currentSheet={currentSheet} />\n          )\n          }\n       \n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","import './App.css';\nimport React,{useState,useEffect} from 'react';\nimport SheetSidebar from './components/SheetSidebar'\nfunction App() {\n    \n    const [count,setCount]=useState(0);\n    console.log(\"Hits=\",count);\n    useEffect(()=>{\n      fetch('https://harshit-resource.herokuapp.com/hitCount').then(response=>response.json())\n    .then(count=>{\n      setCount(count);\n          \n    })\n      .catch((err)=>console.log(err)); \n  },[]);\n\n  return (\n    <div className=\"App\">\n     \n      <SheetSidebar  />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}